<?php
/**	op-module-tutorial:/content/Required/App.phtml
 *
 * @created    2025-09-18
 * @version    1.0
 * @package    op-module-tutorial
 * @author     Tomoaki Nagahara
 * @copyright  Tomoaki Nagahara All right reserved.
 */

/**	namespace
 *
 */
namespace OP;

//	...
$origin = OP()->Unit()->App()->Origin();

?>
<section class="markdown" data-translation="true">
# Welcome to the First Tutorial

In this tutorial, you will learn how the ONEPIECE Framework works step by step!
</section>

<?php
if(!OP()->Template('tutorial:/yesno.phtml',[
	'message'=>'Please click "Yes"!',
	'yes'=>"That's right!",
])){
	return;
}
?>

<section class="markdown" data-translation="true">
## "APP" Root

First, let me explain the "APP" Root.<br/>
The "APP" Root refers to the directory where the ONEPIECE application is executed.<br/>
In the case of this application, the following directory is the "APP" Root.<br/>

<pre><code>
<?= OP()->Path('app:/') ?>
</code></pre>

Please open the directory above. You should see the ONEPIECE Framework installed there.<br/>
</section>

<?php
if(!OP()->Template('tutorial:/yesno.phtml',[
	'message'=>'Were you able to open the "APP" root?',
	'yes'=>'So Good!'
])){
	return;
}
?>

<section class="markdown" data-translation="true">
Now, please check the "APP" Root.
Let me explain the following important files.

1. `LICENSE`: This is the license for the ONEPIECE Framework.
1. `README.md`: It contains instructions on how to install and start the ONEPIECE Framework.
1. `cicd`: This is the command to run CI/CD. This will be explained in detail in the CI/CD chapter.
1. `asset` directory:
    This directory contains many files required for the ONEPIECE Framework to function properly.
1. `app.php`:
    This file is the first file that the ONEPIECE framework executes.
    Activate the ONEPIECE mechanism, and then hands over control to index.php.
    This is generally referred to as an **entry point**.
1. `index.php`:
    This file is controls access to that directory.
    You can place an index.php file in each directory as needed.
    In a typical MVC architecture, this file is called the **controller**.
1. `index.html`: This is a sample page for HTML pass-through.
1. `favicon.ico`: This is the default icon.
</section>

<?php
if(!OP()->Template('tutorial:/yesno.phtml',[
	'message'=>'Did you find the files listed above?',
	'yes'=>'So very good!',
])){
	return;
}
?>

<section class="markdown" data-translation="true">
Please note that from now on, the "APP" root will be expressed as `app:/`, so please make sure to remember this!<br/>
</section>

<?php
if(!OP()->Template('tutorial:/yesno.phtml',[
	'message'=>'Did you understand app:/?',
	'yes'=>'Excellent!',
])){
	return;
}
?>

<section class="markdown" data-translation="true">
## Let's get started with development!

Please create a `test` directory in the `app:/`. The full path is as follows:

<pre><code>
<?= OP()->Path('app:/test/') ?>
</code></pre>

Inside the newly created `app:/test/` directory, create a file named `index.php`.
In the ONEPIECE framework, `index.php` is the file that controls so that directory.
The full path is as follows:

<pre><code>
<?= OP()->Path('app:/test/index.php') ?>
</code></pre>

Now, let’s add the code below to index.php!

```php
&lt;?php
echo "Hello, new world";
```

After saving the program, access the following URL.
The program you saved should be executed!

<pre><code>
<?php
echo $origin.OP()->URL('app:/').'test/' ;
?>
</code></pre>

</section>

<?php
if(!OP()->Template('tutorial:/yesno.phtml',[
	'message'=>'Are <code>Hello, new world</code> is displayed?',
	'yes'=>'Congratulation!! You are now a ONEPIECE Framework developers!!!',
])){
	return;
}
?>

<section class="markdown" data-translation="true">
## Separate the "controller" and the "view"

So we're at it, let's make one more change.<br/>
In a typical MVC architecture, it's common to separate "controllers" and "views".<br/>
In the ONEPIECE Framework, the file extension for "views" must be `phtml`.<br/>
So, let's separate them into `index.php` and `view.phtml`!<br/>

Modify `app:/test/index.php` as shown below. The full path to the file is as follows: `<?= OP()->Path('app:/test/index.php') ?>`

```php
&lt;?php
// echo "Hello, new world";
OP()->Template('view.phtml');
```

`OP()->Template()` is loads a file and outputs it. In the above code, it loads `view.phtml` and outputs it. We will explain `OP()->Template()` in detail in a dedicated chapter.

Now, create a `app:/test/view.phtml` file and add the following code.<br/>
The full path of the file to be created is as follows: `<?= OP()->Path('app:/test/view.phtml') ?>`

```html
<h1>Hello, the NEW WORLD!</h1>
```

Try reloading the following URL. If the changes are reflected, it's successful.

```
<?php
echo $origin.OP()->URL('app:/').'test/' ;
?>

```
</section>

<?php
if(!OP()->Template('tutorial:/yesno.phtml',[
	'message'=>'Are the changes reflected?',
	'yes'=>'Perfect!',
])){
	return;
}
?>

<section class="markdown" data-translation="true">
# Key points of this chapter

In this chapter, you learned about "controller" and "view".

First, you created a `test` directory in the "APP" root.
In the ONEPIECE framework, the path is written as `app:/test/`.

Second, you created the `index.php` and `view.phtml` files in the `test` directory.
These are written as `app:/test/index.php` and `app:/test/view.phtml`.

`index.php` acts as the controller for that directory.

The role of the view has been separated to `view.phtml`.

One is `index.php`, which served as the controller for that directory.
The other is `view.phtml`, which acted as the view.

And you used `OP()->Template()`, an important feature of the ONEPIECE framework.
This will be explained in more detail in a dedicated chapter.
</section>

<?php
if(!OP()->Template('tutorial:/yesno.phtml',[
	'message'=>'Can you see that creating an index.php in a directory makes it a controller?',
	'yes'=>'Super Great!!',
])){
	return;
}
?>

<section class="markdown" data-translation="true">
You have now mastered the basics of the ONEPIECE Framework!
With this, you should now have a solid understanding of the role of `index.php` in the ONEPIECE Framework.
There’s nothing more to learn in this chapter — you’ve mastered it perfectly!
Now, let’s move on to the next chapter!
</section>

<?php OP()->Template('tutorial:/feedback.phtml') ?>

<section class="markdown" data-translation="true">
The first tutorial is over
In the next chapter, you'll learn how to output HTML file without creating controllers.

[➡️ Let's move on to the next chapter!](<?php echo OP()->URL('tutorial:/Required/HTML') ?>)
</section>
